// Generated by CoffeeScript 1.10.0
(function() {
  var Cell, blankStyle, chooseCharacter, chooseColor;

  chooseCharacter = require('./char-query');

  chooseColor = require('./color-query');

  blankStyle = function() {
    return {
      style: 'none',
      color: {
        foreground: 'none',
        background: 'none'
      }
    };
  };

  Cell = (function() {
    function Cell() {
      this._dirs = {
        left: blankStyle(),
        up: blankStyle(),
        right: blankStyle(),
        down: blankStyle()
      };
    }

    Cell.prototype.left = function() {
      var color;
      if (arguments.length) {
        this._dirs.left.style = arguments[0];
        if (arguments.length > 1) {
          color = arguments[1];
          if (color.foreground) {
            this._dirs.left.color.foreground = color.foreground;
          }
          if (color.background) {
            this._dirs.left.color.background = color.background;
          }
        }
        return this;
      } else {
        return this._dirs.left;
      }
    };

    Cell.prototype.up = function() {
      var color;
      if (arguments.length) {
        this._dirs.up.style = arguments[0];
        if (arguments.length > 1) {
          color = arguments[1];
          if (color.foreground) {
            this._dirs.up.color.foreground = color.foreground;
          }
          if (color.background) {
            this._dirs.up.color.background = color.background;
          }
        }
        return this;
      } else {
        return this._dirs.up;
      }
    };

    Cell.prototype.right = function() {
      var color;
      if (arguments.length) {
        this._dirs.right.style = arguments[0];
        if (arguments.length > 1) {
          color = arguments[1];
          if (color.foreground) {
            this._dirs.right.color.foreground = color.foreground;
          }
          if (color.background) {
            this._dirs.right.color.background = color.background;
          }
        }
        return this;
      } else {
        return this._dirs.right;
      }
    };

    Cell.prototype.down = function() {
      var color;
      if (arguments.length) {
        this._dirs.down.style = arguments[0];
        if (arguments.length > 1) {
          color = arguments[1];
          if (color.foreground) {
            this._dirs.down.color.foreground = color.foreground;
          }
          if (color.background) {
            this._dirs.down.color.background = color.background;
          }
        }
        return this;
      } else {
        return this._dirs.down;
      }
    };

    Cell.prototype.toString = function() {
      return {
        char: chooseCharacter({
          left: this.left().style,
          up: this.up().style,
          right: this.right().style,
          down: this.down().style
        }),
        color: chooseColor({
          left: this.left().color,
          up: this.up().color,
          right: this.right().color,
          down: this.down().color
        })
      };
    };

    return Cell;

  })();

  module.exports = function() {
    return new Cell();
  };

}).call(this);
